---
- name: Determine inventory of hosts in limit
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    tower_host: "{{ tower_host }}"
    tower_token: "{{ tower_token }}"

  tasks:
    - name: Get limit hosts from extra vars
      set_fact:
        limit_hosts: "{{ limit.split(',') if limit is string else limit }}"
      
    - name: Retrieve all hosts from AAP
      uri:
        url: "{{ tower_host }}/api/v2/hosts/"
        method: GET
        headers:
          Authorization: "Bearer {{ tower_token }}"
        validate_certs: false
      register: hosts_response
      
    - name: Extract host data
      set_fact:
        all_hosts: "{{ hosts_response.json.results }}"
      
    - name: Map hosts to their inventories
      set_fact:
        host_inventory_map: >-
          {{ host_inventory_map | default({}) | combine({item.name: {
             'id': item.summary_fields.inventory.id,
             'name': item.summary_fields.inventory.name
          }}) }}
      loop: "{{ all_hosts }}"
      
    - name: Find matched hosts in limit
      set_fact:
        matched_hosts: "{{ all_hosts | selectattr('name', 'in', limit_hosts) | list }}"
      
    - name: Debug matched hosts
      debug:
        var: matched_hosts
      
    - name: Fail if no hosts found
      fail:
        msg: "No hosts found matching limit: {{ limit_hosts | join(', ') }}"
      when: matched_hosts | length == 0
      
    - name: Group hosts by inventory
      set_fact:
        hosts_by_inventory: >-
          {% set result = {} %}
          {% for host in matched_hosts %}
            {% set inv_id = host.summary_fields.inventory.id %}
            {% if inv_id not in result %}
              {% set _dummy = result.update({inv_id: {
                'name': host.summary_fields.inventory.name,
                'hosts': []
              }}) %}
            {% endif %}
            {% set _dummy = result[inv_id].hosts.append(host.name) %}
          {% endfor %}
          {{ result }}
      
    - name: Display hosts grouped by inventory
      debug:
        var: hosts_by_inventory
        
    - name: Process each inventory group
      include_tasks: process_inventory_group.yml
      loop: "{{ hosts_by_inventory.keys() | list }}"
      loop_control:
        loop_var: inventory_id
        label: "{{ hosts_by_inventory[inventory_id].name }}"

    - name: Set workflow artifacts for all hosts
      set_stats:
        data:
          all_inventories: "{{ hosts_by_inventory | to_json }}"
          all_processed_inventories: "{{ processed_inventories | default([]) }}"
          containment_action: "{{ containment_action | default('containment') }}"
          profile: "{{ profile | default('FULL') }}"
          outbound_whitelist: "{{ outbound_whitelist | default([]) }}"
          inbound_whitelist: "{{ inbound_whitelist | default([]) }}"
          verification_list: "{{ verification_list | default([]) }}"