---
- name: Determine inventory of hosts in limit
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    aap_ip: 192.168.1.38
    dns_ip: 192.168.1.1
    tower_host: "{{ tower_host }}"
    tower_token: "{{ tower_token }}"
    rhel9_job_template_id: 7
    rhel8_job_template_id: 10
    rhel7_job_template_id: 11
  tasks:
    - name: Get limit hosts from extra vars
      set_fact:
        limit_hosts: "{{ limit.split(',') if limit is string else limit }}"
      
    - name: Retrieve all hosts from AAP
      uri:
        url: "{{ tower_host }}/api/v2/hosts/"
        method: GET
        headers:
          Authorization: "Bearer {{ tower_token }}"
        validate_certs: false
      register: hosts_response
      
    - name: Extract host data
      set_fact:
        all_hosts: "{{ hosts_response.json.results }}"
      
    - name: Map hosts to their inventories
      set_fact:
        host_inventory_map: >-
          {{ host_inventory_map | default({}) | combine({item.name: {
             'id': item.summary_fields.inventory.id,
             'name': item.summary_fields.inventory.name
          }}) }}
      loop: "{{ all_hosts }}"
      
    - name: Find matched hosts in limit
      set_fact:
        matched_hosts: "{{ all_hosts | selectattr('name', 'in', limit_hosts) | list }}"
      
    - name: Debug matched hosts
      debug:
        var: matched_hosts
      
    - name: Fail if no hosts found
      fail:
        msg: "No hosts found matching limit: {{ limit_hosts | join(', ') }}"
      when: matched_hosts | length == 0
      
    # Simpler approach using loop to create hosts_by_inventory
    - name: Initialize hosts_by_inventory
      set_fact:
        hosts_by_inventory: {}
        
    - name: Build inventory groups
      set_fact:
        hosts_by_inventory: >-
          {{ hosts_by_inventory | combine({
            (item.summary_fields.inventory.id | string): {
              'name': item.summary_fields.inventory.name,
              'hosts': hosts_by_inventory[item.summary_fields.inventory.id | string].hosts | default([]) + [item.name]
            }
          })}}
      loop: "{{ matched_hosts }}"
      
    - name: Display hosts grouped by inventory
      debug:
        var: hosts_by_inventory
      
    - name: Process each inventory group
      include_tasks: process_inventory_group.yml
      loop: "{{ hosts_by_inventory.keys() | list }}"
      loop_control:
        loop_var: inventory_id
        label: "{{ hosts_by_inventory[inventory_id].name }}"

    - name: Get consolidated host lists by OS type
      set_fact:
        rhel9_hosts: "{{ processed_inventories | selectattr('os_type', 'equalto', 'rhel9') | map(attribute='hosts') | flatten | join(',') }}"
        rhel8_hosts: "{{ processed_inventories | selectattr('os_type', 'equalto', 'rhel8') | map(attribute='hosts') | flatten | join(',') }}"
        rhel7_hosts: "{{ processed_inventories | selectattr('os_type', 'equalto', 'rhel7') | map(attribute='hosts') | flatten | join(',') }}"

    - name: Display consolidated host lists
      debug:
        msg:
          - "RHEL 9 hosts: {{ rhel9_hosts }}"
          - "RHEL 8 hosts: {{ rhel8_hosts }}"
          - "RHEL 7 hosts: {{ rhel7_hosts }}"


    - name: Launch RHEL 9 containment job
      uri:
        url: "{{ tower_host }}/api/v2/job_templates/{{ rhel9_job_template_id }}/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ tower_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          limit: "{{ rhel9_hosts }}"
          extra_vars:
            containment_action: "{{ containment_action | default('containment') }}"
            profile: "{{ profile | default('FULL') }}"
            outbound_whitelist: "{{ outbound_whitelist | default([]) }}"
            inbound_whitelist: "{{ inbound_whitelist | default([]) }}"
            verification_list: "{{ verification_list | default([]) }}"
        status_code: [200, 201, 202]
        validate_certs: no  # Set to 'yes' in production
      register: rhel9_job_response
      when: rhel9_hosts != ""

    - name: Launch RHEL 8 containment job
      uri:
        url: "{{ tower_host }}/api/v2/job_templates/{{ rhel8_job_template_id }}/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ tower_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          limit: "{{ rhel8_hosts }}"
          extra_vars:
            containment_action: "{{ containment_action | default('containment') }}"
            profile: "{{ profile | default('FULL') }}"
            outbound_whitelist: "{{ outbound_whitelist | default([]) }}"
            inbound_whitelist: "{{ inbound_whitelist | default([]) }}"
            verification_list: "{{ verification_list | default([]) }}"
        status_code: [200, 201, 202]
        validate_certs: no  # Set to 'yes' in production
      register: rhel8_job_response
      when: rhel8_hosts != ""

    - name: Launch RHEL 7 containment job
      uri:
        url: "{{ tower_host }}/api/v2/job_templates/{{ rhel7_job_template_id }}/launch/"
        method: POST
        headers:
          Authorization: "Bearer {{ tower_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          limit: "{{ rhel7_hosts }}"
          extra_vars:
            containment_action: "{{ containment_action | default('containment') }}"
            profile: "{{ profile | default('FULL') }}"
            outbound_whitelist: "{{ outbound_whitelist | default([]) }}"
            inbound_whitelist: "{{ inbound_whitelist | default([]) }}"
            verification_list: "{{ verification_list | default([]) }}"
        status_code: [200, 201, 202]
        validate_certs: no  # Set to 'yes' in production
      register: rhel7_job_response
      when: rhel7_hosts != ""

    - name: Display launched job information
      debug:
        msg:
          - "RHEL 9 job ID: {{ (rhel9_job_response.json.id | default('No job launched')) if rhel9_hosts != '' else 'No RHEL 9 hosts found' }}"
          - "RHEL 8 job ID: {{ (rhel8_job_response.json.id | default('No job launched')) if rhel8_hosts != '' else 'No RHEL 8 hosts found' }}"
          - "RHEL 7 job ID: {{ (rhel7_job_response.json.id | default('No job launched')) if rhel7_hosts != '' else 'No RHEL 7 hosts found' }}"
