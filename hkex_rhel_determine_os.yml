---
- name: Determine inventory of hosts in limit
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    tower_host: "{{ tower_host }}"
    tower_token: "{{ tower_token }}"

  tasks:
    - name: Get limit hosts from extra vars
      set_fact:
        limit_hosts: "{{ limit.split(',') }}"
      
    - name: Retrieve all hosts from AAP
      uri:
        url: "{{ tower_host }}/api/v2/hosts/"
        method: GET
        headers:
          Authorization: "Bearer {{ tower_token }}"
        validate_certs: false
      register: hosts_response
      
    - name: Extract host data
      set_fact:
        all_hosts: "{{ hosts_response.json.results }}"
      
    - name: Map hosts to their inventories
      set_fact:
        host_inventory_map: >-
          {{ host_inventory_map | default({}) | combine({item.name: item.summary_fields.inventory.name}) }}
      loop: "{{ all_hosts }}"
      
    - name: Debug host-inventory mapping
      debug:
        var: host_inventory_map
        
    - name: Find matching inventories for limit hosts
      set_fact:
        matched_inventories: >-
          {{ matched_inventories | default([]) + 
             [host_inventory_map[item]] 
             if item in host_inventory_map else matched_inventories | default([]) }}
      loop: "{{ limit_hosts }}"
      
    - name: Debug matched inventories
      debug:
        var: matched_inventories
        
    - name: Group hosts by inventory
      set_fact:
        hosts_by_inventory: >-
          {{ hosts_by_inventory | default({}) | 
             combine({item.summary_fields.inventory.name: 
                     hosts_by_inventory[item.summary_fields.inventory.name] | default([]) + [item.name]}) }}
      loop: "{{ all_hosts }}"
      
    - name: Debug hosts by inventory
      debug:
        var: hosts_by_inventory
        
    - name: Get inventory details by ID
      set_fact:
        inventory_details: >-
          {{ inventory_details | default({}) | 
             combine({item.summary_fields.inventory.name: {
               'id': item.summary_fields.inventory.id,
               'description': item.summary_fields.inventory.description,
               'organization_id': item.summary_fields.inventory.organization_id
             }}) }}
      loop: "{{ all_hosts }}"
      
    - name: Debug inventory details
      debug:
        var: inventory_details
        
    - name: Set variables for hosts in limit
      set_fact:
        limit_host_details: >-
          {{ limit_host_details | default({}) | 
             combine({item.name: {
               'id': item.id,
               'inventory_id': item.inventory,
               'inventory_name': item.summary_fields.inventory.name,
               'has_active_failures': item.has_active_failures,
               'enabled': item.enabled,
               'variables': item.variables
             }}) }}
      loop: "{{ all_hosts }}"
      when: item.name in limit_hosts
        
    - name: Debug limit host details
      debug:
        var: limit_host_details
          
    - name: Determine unique inventories for limit hosts
      set_fact:
        unique_inventories: "{{ matched_inventories | unique }}"
        
    - name: Fail if multiple inventories found
      fail:
        msg: "Error: Hosts are in different inventories: {{ unique_inventories | join(', ') }}"
      when: unique_inventories | length > 1
      
    - name: Fail if no inventory found
      fail:
        msg: "Error: No inventory found for hosts: {{ limit_hosts | join(', ') }}"
      when: unique_inventories | length == 0
      
    - name: Set matched inventory
      set_fact:
        matched_inventory: "{{ unique_inventories[0] }}"
        
    - name: Determine OS type from inventory name
      set_fact:
        os_type: >-
          {% if 'RHEL 9' in matched_inventory %}
          rhel9
          {% elif 'RHEL 8' in matched_inventory %}
          rhel8
          {% elif 'RHEL 7' in matched_inventory %}
          rhel7
          {% else %}
          unknown
          {% endif %}
        
    - name: Output matched inventory and OS type
      debug:
        msg: 
          - "Matched inventory for {{ limit_hosts | join(', ') }}: {{ matched_inventory }}"
          - "Determined OS type: {{ os_type }}"
        
    - name: Set workflow artifacts
      set_stats:
        data:
          matched_inventory_name: "{{ matched_inventory }}"
          matched_inventory_id: "{{ inventory_details[matched_inventory].id }}"
          os_type: "{{ os_type }}"
          hosts_in_inventory: "{{ hosts_by_inventory[matched_inventory] | default([]) }}"